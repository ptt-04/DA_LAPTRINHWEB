@model Order

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-shopee text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Chi tiết đơn hàng #@Model.Id</h3>
            <a asp-action="Index" class="btn btn-outline-light">
                <i class="fas fa-arrow-left me-2"></i>Quay lại
            </a>
        </div>
        <div class="card-body">
            <div class="row mb-4">
                <div class="col-md-6">
                    <h5 class="text-shopee mb-3">Thông tin đơn hàng</h5>
                    <p><strong>Mã đơn hàng:</strong> #@Model.Id</p>
                    <p><strong>Người đặt:</strong> @Model.ApplicationUser.FullName</p>
                    <p><strong>Ngày đặt:</strong> @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                    <p><strong>Tổng tiền:</strong> <span class="text-shopee">@Model.TotalPrice.ToString("#,##0") ₫</span></p>
                </div>
                <div class="col-md-6">
                    <h5 class="text-shopee mb-3">Thông tin giao hàng</h5>
                    <p><strong>Địa chỉ:</strong> @Model.ShippingAddress</p>
                    <p><strong>Ghi chú:</strong> @(string.IsNullOrEmpty(Model.Notes) ? "Không có" : Model.Notes)</p>
                </div>
            </div>

            <h5 class="text-shopee mb-3">Chi tiết sản phẩm</h5>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Sản phẩm</th>
                            <th class="text-center">Số lượng</th>
                            <th class="text-end">Đơn giá</th>
                            <th class="text-end">Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            // Tính tổng giảm giá nếu có
                            bool hasDiscount = Model.TotalPrice < Model.OrderDetails.Sum(x => x.Product.Price * x.Quantity);
                        }
                        @foreach (var item in Model.OrderDetails)
                        {
                            var originalUnitPrice = item.Product?.Price ?? 0;
                            var originalTotal = originalUnitPrice * item.Quantity;
                            var discountedUnitPrice = item.Price;
                            var discountedTotal = discountedUnitPrice * item.Quantity;
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(item.Product?.ImageUrl))
                                        {
                                            <img src="@item.Product.ImageUrl" alt="@item.Product.Name" 
                                                 class="img-thumbnail me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                        }
                                        <div>
                                            <h6 class="mb-0">@item.Product?.Name</h6>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">@item.Quantity</td>
                                <td class="text-end">
                                    @if (hasDiscount && originalUnitPrice > discountedUnitPrice)
                                    {
                                        <span class="text-muted" style="text-decoration:line-through; font-size:0.95em;">@originalUnitPrice.ToString("#,##0") ₫</span><br />
                                        <span class="text-shopee fw-bold">@discountedUnitPrice.ToString("#,##0") ₫</span>
                                    }
                                    else
                                    {
                                        <span class="text-shopee fw-bold">@discountedUnitPrice.ToString("#,##0") ₫</span>
                                    }
                                </td>
                                <td class="text-end">
                                    @if (hasDiscount && originalTotal > discountedTotal)
                                    {
                                        <span class="text-muted" style="text-decoration:line-through; font-size:0.95em;">@originalTotal.ToString("#,##0") ₫</span><br />
                                        <span class="text-shopee fw-bold">@discountedTotal.ToString("#,##0") ₫</span>
                                    }
                                    else
                                    {
                                        <span class="text-shopee fw-bold">@discountedTotal.ToString("#,##0") ₫</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        @{
                            var totalOrigin = Model.OrderDetails.Sum(x => x.Product.Price * x.Quantity);
                            var discount = totalOrigin - Model.TotalPrice;
                        }
                        @if (discount > 0)
                        {
                            <tr>
                                <td colspan="3" class="text-end text-muted">Đã trừ mã giảm giá:</td>
                                <td class="text-end text-danger">-@discount.ToString("#,##0") ₫</td>
                            </tr>
                        }
                        <tr class="table-total">
                            <td colspan="3" class="text-end"><strong>Tổng cộng:</strong></td>
                            <td class="text-end"><strong class="text-shopee">@Model.TotalPrice.ToString("#,##0") ₫</strong></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        :root {
            --shopee-color: #d32f2f;
            --shopee-color-dark: #b71c1c;
        }
        .bg-shopee {
            background-color: var(--shopee-color) !important;
        }
        .text-shopee {
            color: var(--shopee-color) !important;
        }
        .card-header {
            background-color: var(--shopee-color) !important;
            color: #fff !important;
            border-radius: 8px 8px 0 0;
        }
        .btn-outline-light {
            background: #fff;
            color: var(--shopee-color);
            border: 1.5px solid var(--shopee-color);
        }
        .btn-outline-light:hover {
            background-color: var(--shopee-color-dark);
            color: #fff;
            border-color: var(--shopee-color-dark);
        }
        .table th {
            background-color: #f8f9fa;
            border-bottom: 2px solid var(--shopee-color);
        }
        .table td {
            vertical-align: middle;
        }
        .img-thumbnail {
            border-radius: 4px;
            border-color: #efefef;
        }
        .table-total {
            border-top: 2px solid var(--shopee-color);
        }
    </style>
} 